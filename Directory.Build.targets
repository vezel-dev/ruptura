<Project>
    <ItemGroup>
        <Using Include="Microsoft.Win32.SafeHandles" />
        <Using Include="System.Collections.Immutable" />
        <Using Include="System.ComponentModel" />
        <Using Include="System.Diagnostics" />
        <Using Include="System.Diagnostics.CodeAnalysis" />
        <Using Include="System.Globalization" />
        <Using Include="System.IO.MemoryMappedFiles" />
        <Using Include="System.Numerics" />
        <Using Include="System.Reflection" />
        <Using Include="System.Reflection.Emit" />
        <Using Include="System.Runtime.CompilerServices" />
        <Using Include="System.Runtime.ConstrainedExecution" />
        <Using Include="System.Runtime.ExceptionServices" />
        <Using Include="System.Runtime.InteropServices" />
        <Using Include="System.Runtime.InteropServices.ComTypes" />
        <Using Include="System.Text" />
        <Using Include="System.Threading" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0'">
        <Using Include="System.Runtime.Intrinsics" />
    </ItemGroup>

    <ItemGroup Condition="'$(UsingVezelZigSdk)' != 'true'">
        <AdditionalFiles Include="$(MSBuildThisFileDirectory).stylecop.json" />
    </ItemGroup>

    <Choose>
        <When Condition="'$(IsPackable)' == 'true'">
            <PropertyGroup>
                <IsAotCompatible Condition="'$(OutputType)' == 'Library'">true</IsAotCompatible>
            </PropertyGroup>

            <ItemGroup>
                <None Include="$(MSBuildThisFileDirectory)PACKAGE.md; $(MSBuildThisFileDirectory)ruptura.png"
                      Pack="true"
                      PackagePath=""
                      Visible="false" />
                <None Include="$(MSBuildProjectName).targets"
                      Pack="true"
                      PackagePath="buildTransitive/$(PackageId).targets"
                      Condition="'$(OutputType)' == 'Library' and Exists('$(MSBuildProjectName).targets')" />
            </ItemGroup>
        </When>
    </Choose>

    <Target Name="_SetReleaseNotes"
            DependsOnTargets="GetBuildVersion"
            BeforeTargets="GenerateNuspec"
            Condition="'$(IsPackable)' == 'true' and '$(PublicRelease)' == 'true'">
        <PropertyGroup>
            <PackageReleaseNotes>https://github.com/vezel-dev/ruptura/releases/tag/v$(Version)</PackageReleaseNotes>
        </PropertyGroup>
    </Target>

    <!--
    Get rid of the restored package(s) in the repository's local package cache.
    This ensures that people will not have to fiddle around with removing these
    manually when iterating on changes locally.
    -->
    <Target Name="_ClearPackageCache"
            AfterTargets="Clean; Pack"
            Condition="'$(IsPackable)' == 'true'">
        <ItemGroup>
            <_CachedFiles Include="$(NuGetPackageRoot)/$(PackageId.ToLowerInvariant())/**" />
        </ItemGroup>

        <Delete Files="@(_CachedFiles)" />
    </Target>
</Project>
